@model List<EventModel>;
@{
    ViewData["Title"] = "View List";
    //Aidan - Made this page.
}

<div class="text-center">
    <h1 class="display-4">View To-Do List</h1>
    <div class="row">
        <div class="col-sm-2">
            <a asp-controller="Actions" asp-action="Add"
               class="list-group-item">Add an Event</a>
               @*The filter function gets the action from the home controller in order to get a query that finds out what is being filtered*@
            <form asp-controller="Home" asp-action="Filter" method="post">
                <div class="form-group">
                    <label>Category:</label>
                    <select name="filter" class="form-control"
                            asp-items="@(new SelectList(ViewBag.Categories, "Key", "Value", ViewBag.Filters.Category))">
                        <option value = "all"> All </option >
                    </select >
                </div>
                <div class="form-group">
                    <label>Month:</label>
                    <select name="filter" class="form-control"
                            asp-items="@(new SelectList(ViewBag.Months, "Key", "Value", ViewBag.Filters.Month))">
                        <option value="all"> All </option>
                    </select>
                </div>
                <p></p>
                <button type="submit" class="btn btn-primary">Filter</button>
                <a asp-action="Index" asp-route-id="" class="btn btn-primary">Clear</a>
            </form>
        </div>
        <div class="col-sm-10">
            <table class="table table-bordered table-striped mt-2">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Category</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var task in Model)
                    {
                        if (task.EndDate > DateTime.Now) {
                            <tr>
                                <td>@task.Summary</td>
                                <td>@task.StartDate.ToShortDateString()</td>
                                <td>@task.EndDate.ToShortDateString()</td>
                                <td>@task.EventType</td>
                                <td>@Html.Raw(task.Description)</td> @*Use @Html.Raw(task.Description) to keep links functional*@
                                <td>
                                    <a asp-controller="Actions" asp-action="Update" class="btn btn-primary btn-sm" 
                                        asp-route-id="@task.Id">Update</a>
                                </td>
                                <td>
                                    <a asp-controller="Actions" asp-action="Delete" class="btn btn-primary btn-sm"
                                       asp-route-id="@task.Id">Delete</a>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>